/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/music/sound.mp3":
/*!*****************************!*\
  !*** ./src/music/sound.mp3 ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + \"src/music/sound.mp3\");\n\n//# sourceURL=webpack://webpack/./src/music/sound.mp3?");

/***/ }),

/***/ "./src/music/zvuk.mp3":
/*!****************************!*\
  !*** ./src/music/zvuk.mp3 ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + \"src/music/zvuk.mp3\");\n\n//# sourceURL=webpack://webpack/./src/music/zvuk.mp3?");

/***/ }),

/***/ "./src/css/style.css":
/*!***************************!*\
  !*** ./src/css/style.css ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://webpack/./src/css/style.css?");

/***/ }),

/***/ "./src/js/libs/howler.js":
/*!*******************************!*\
  !*** ./src/js/libs/howler.js ***!
  \*******************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n *  howler.js v2.2.3\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var ua = self._navigator ? self._navigator.userAgent : '';\n      var checkOpera = ua.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n      var checkSafari = ua.indexOf('Safari') !== -1 && ua.indexOf('Chrome') === -1;\n      var safariVersion = ua.match(/Version\\/(.*?) /);\n      var isOldSafari = (checkSafari && safariVersion && parseInt(safariVersion[1], 10) < 15);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        webm: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n          document.removeEventListener('keydown', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n      document.addEventListener('keydown', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                  } else {\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n          self._state = 'loading';\n\n          var listener = function() {\n            self._state = 'loaded';\n            \n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n\n              // If playing, restart playback to ensure looping updates.\n              if (self.playing(ids[i])) {\n                self.pause(ids[i], true);\n                self.play(ids[i], true);\n              }\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        if (self._sounds.length) {\n          id = self._sounds[0]._id;\n        }\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return 0;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n\n            self._emit('seek', id);\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (true) {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof __webpack_require__.g !== 'undefined') {\n    __webpack_require__.g.HowlerGlobal = HowlerGlobal;\n    __webpack_require__.g.Howler = Howler;\n    __webpack_require__.g.Howl = Howl;\n    __webpack_require__.g.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.3\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n          panner.panningModel = pa.panningModel;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n\n})();\n\n//# sourceURL=webpack://webpack/./src/js/libs/howler.js?");

/***/ }),

/***/ "./src/js/libs/luxon.js":
/*!******************************!*\
  !*** ./src/js/libs/luxon.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DateTime\": () => (/* binding */ Wr),\n/* harmony export */   \"Duration\": () => (/* binding */ _t),\n/* harmony export */   \"FixedOffsetZone\": () => (/* binding */ Ve),\n/* harmony export */   \"IANAZone\": () => (/* binding */ De),\n/* harmony export */   \"Info\": () => (/* binding */ Rt),\n/* harmony export */   \"Interval\": () => (/* binding */ Wt),\n/* harmony export */   \"InvalidZone\": () => (/* binding */ Ie),\n/* harmony export */   \"Settings\": () => (/* binding */ qe),\n/* harmony export */   \"SystemZone\": () => (/* binding */ Oe),\n/* harmony export */   \"VERSION\": () => (/* binding */ Xe),\n/* harmony export */   \"Zone\": () => (/* binding */ Te)\n/* harmony export */ });\nclass e extends Error{}class r extends e{constructor(e){super(`Invalid DateTime: ${e.toMessage()}`)}}class n extends e{constructor(e){super(`Invalid Interval: ${e.toMessage()}`)}}class s extends e{constructor(e){super(`Invalid Duration: ${e.toMessage()}`)}}class N extends e{}class i extends e{constructor(e){super(`Invalid unit ${e}`)}}class a extends e{}class o extends e{constructor(){super(\"Zone is an abstract class\")}}var t=\"numeric\",u=\"short\",l=\"long\";const c={year:t,month:t,day:t},h={year:t,month:u,day:t},d={year:t,month:u,day:t,weekday:u},m={year:t,month:l,day:t},f={year:t,month:l,day:t,weekday:l},y={hour:t,minute:t},g={hour:t,minute:t,second:t},w={hour:t,minute:t,second:t,timeZoneName:u},p={hour:t,minute:t,second:t,timeZoneName:l},v={hour:t,minute:t,hourCycle:\"h23\"},T={hour:t,minute:t,second:t,hourCycle:\"h23\"},S={hour:t,minute:t,second:t,hourCycle:\"h23\",timeZoneName:u},O={hour:t,minute:t,second:t,hourCycle:\"h23\",timeZoneName:l},b={year:t,month:t,day:t,hour:t,minute:t},M={year:t,month:t,day:t,hour:t,minute:t,second:t},k={year:t,month:u,day:t,hour:t,minute:t},D={year:t,month:u,day:t,hour:t,minute:t,second:t},E={year:t,month:u,day:t,weekday:u,hour:t,minute:t},V={year:t,month:l,day:t,hour:t,minute:t,timeZoneName:u},I={year:t,month:l,day:t,hour:t,minute:t,second:t,timeZoneName:u},x={year:t,month:l,day:t,weekday:l,hour:t,minute:t,timeZoneName:l},C={year:t,month:l,day:t,weekday:l,hour:t,minute:t,second:t,timeZoneName:l};function $(e){return void 0===e}function Z(e){return\"number\"==typeof e}function F(e){return\"number\"==typeof e&&e%1==0}function L(){try{return\"undefined\"!=typeof Intl&&!!Intl.RelativeTimeFormat}catch(e){return!1}}function z(e,r,n){if(0!==e.length)return e.reduce((e,t)=>{t=[r(t),t];return e&&n(e[0],t[0])===e[0]?e:t},null)[1]}function q(e,t){return Object.prototype.hasOwnProperty.call(e,t)}function A(e,t,r){return F(e)&&t<=e&&e<=r}function j(e,t=2){var r=e<0?\"-\":\"\";const n=r?-1*e:e;let s;return s=n.toString().length<t?(\"0\".repeat(t)+n).slice(-t):n.toString(),`${r}${s}`}function _(e){if(!$(e)&&null!==e&&\"\"!==e)return parseInt(e,10)}function U(e){if(!$(e)&&null!==e&&\"\"!==e){e=1e3*parseFloat(\"0.\"+e);return Math.floor(e)}}function H(e,t,r=!1){const n=10**t,s=r?Math.trunc:Math.round;return s(e*n)/n}function W(e){return e%4==0&&(e%100!=0||e%400==0)}function R(e){return W(e)?366:365}function P(e,t){var r,n,n=(r=t-1)-(n=12)*Math.floor(r/n)+1;return 2==n?W(e+(t-n)/12)?29:28:[31,null,31,30,31,30,31,31,30,31,30,31][n-1]}function J(e){let t=Date.UTC(e.year,e.month-1,e.day,e.hour,e.minute,e.second,e.millisecond);return e.year<100&&0<=e.year&&(t=new Date(t),t.setUTCFullYear(t.getUTCFullYear()-1900)),+t}function Y(e){var t=(e+Math.floor(e/4)-Math.floor(e/100)+Math.floor(e/400))%7,e=e-1,e=(e+Math.floor(e/4)-Math.floor(e/100)+Math.floor(e/400))%7;return 4==t||3==e?53:52}function G(e){return 99<e?e:60<e?1900+e:2e3+e}function B(e,t,r,n=null){const s=new Date(e),i={hourCycle:\"h23\",year:\"numeric\",month:\"2-digit\",day:\"2-digit\",hour:\"2-digit\",minute:\"2-digit\"};n&&(i.timeZone=n);t={timeZoneName:t,...i},t=new Intl.DateTimeFormat(r,t).formatToParts(s).find(e=>\"timezonename\"===e.type.toLowerCase());return t?t.value:null}function Q(e,t){let r=parseInt(e,10);Number.isNaN(r)&&(r=0);t=parseInt(t,10)||0,t=r<0||Object.is(r,-0)?-t:t;return 60*r+t}function K(e){var t=Number(e);if(\"boolean\"==typeof e||\"\"===e||Number.isNaN(t))throw new a(`Invalid unit value ${e}`);return t}function X(e,t){const r={};for(const s in e){var n;!q(e,s)||null!=(n=e[s])&&(r[t(s)]=K(n))}return r}function ee(e,t){var r=Math.trunc(Math.abs(e/60)),n=Math.trunc(Math.abs(e%60)),s=0<=e?\"+\":\"-\";switch(t){case\"short\":return`${s}${j(r,2)}:${j(n,2)}`;case\"narrow\":return`${s}${r}${0<n?`:${n}`:\"\"}`;case\"techie\":return`${s}${j(r,2)}${j(n,2)}`;default:throw new RangeError(`Value format ${t} is out of range for property format`)}}function te(e){return r=e,[\"hour\",\"minute\",\"second\",\"millisecond\"].reduce((e,t)=>(e[t]=r[t],e),{});var r}var re=/[A-Za-z_+-]{1,256}(:?\\/[A-Za-z_+-]{1,256}(\\/[A-Za-z_+-]{1,256})?)?/;const ne=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],se=[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],ie=[\"J\",\"F\",\"M\",\"A\",\"M\",\"J\",\"J\",\"A\",\"S\",\"O\",\"N\",\"D\"];function ae(e){switch(e){case\"narrow\":return[...ie];case\"short\":return[...se];case\"long\":return[...ne];case\"numeric\":return[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\"];case\"2-digit\":return[\"01\",\"02\",\"03\",\"04\",\"05\",\"06\",\"07\",\"08\",\"09\",\"10\",\"11\",\"12\"];default:return null}}const oe=[\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\",\"Sunday\"],ue=[\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\",\"Sun\"],le=[\"M\",\"T\",\"W\",\"T\",\"F\",\"S\",\"S\"];function ce(e){switch(e){case\"narrow\":return[...le];case\"short\":return[...ue];case\"long\":return[...oe];case\"numeric\":return[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\"];default:return null}}const he=[\"AM\",\"PM\"],de=[\"Before Christ\",\"Anno Domini\"],me=[\"BC\",\"AD\"],fe=[\"B\",\"A\"];function ye(e){switch(e){case\"narrow\":return[...fe];case\"short\":return[...me];case\"long\":return[...de];default:return null}}function ge(e,t){let r=\"\";for(const n of e)n.literal?r+=n.val:r+=t(n.val);return r}const we={D:c,DD:h,DDD:m,DDDD:f,t:y,tt:g,ttt:w,tttt:p,T:v,TT:T,TTT:S,TTTT:O,f:b,ff:k,fff:V,ffff:x,F:M,FF:D,FFF:I,FFFF:C};class pe{static create(e,t={}){return new pe(e,t)}static parseFormat(t){let r=null,n=\"\",s=!1;const i=[];for(let e=0;e<t.length;e++){var a=t.charAt(e);\"'\"===a?(0<n.length&&i.push({literal:s,val:n}),r=null,n=\"\",s=!s):s||a===r?n+=a:(0<n.length&&i.push({literal:!1,val:n}),n=a,r=a)}return 0<n.length&&i.push({literal:s,val:n}),i}static macroTokenToFormatOpts(e){return we[e]}constructor(e,t){this.opts=t,this.loc=e,this.systemLoc=null}formatWithSystemDefault(e,t){null===this.systemLoc&&(this.systemLoc=this.loc.redefaultToSystem());const r=this.systemLoc.dtFormatter(e,{...this.opts,...t});return r.format()}formatDateTime(e,t={}){const r=this.loc.dtFormatter(e,{...this.opts,...t});return r.format()}formatDateTimeParts(e,t={}){const r=this.loc.dtFormatter(e,{...this.opts,...t});return r.formatToParts()}resolvedOptions(e,t={}){const r=this.loc.dtFormatter(e,{...this.opts,...t});return r.resolvedOptions()}num(e,t=0){if(this.opts.forceSimple)return j(e,t);const r={...this.opts};return 0<t&&(r.padTo=t),this.loc.numberFormatter(r).format(e)}formatDateTimeFromString(r,e){const n=\"en\"===this.loc.listingMode(),t=this.loc.outputCalendar&&\"gregory\"!==this.loc.outputCalendar,s=(e,t)=>this.loc.extract(r,e,t),i=e=>r.isOffsetFixed&&0===r.offset&&e.allowZ?\"Z\":r.isValid?r.zone.formatOffset(r.ts,e.format):\"\",a=()=>n?function(e){return he[e.hour<12?0:1]}(r):s({hour:\"numeric\",hourCycle:\"h12\"},\"dayperiod\"),o=(e,t)=>n?function(e,t){return ae(t)[e.month-1]}(r,e):s(t?{month:e}:{month:e,day:\"numeric\"},\"month\"),u=(e,t)=>n?function(e,t){return ce(t)[e.weekday-1]}(r,e):s(t?{weekday:e}:{weekday:e,month:\"long\",day:\"numeric\"},\"weekday\"),l=e=>{var t=pe.macroTokenToFormatOpts(e);return t?this.formatWithSystemDefault(r,t):e},c=e=>n?function(e,t){return ye(t)[e.year<0?0:1]}(r,e):s({era:e},\"era\");return ge(pe.parseFormat(e),e=>{switch(e){case\"S\":return this.num(r.millisecond);case\"u\":case\"SSS\":return this.num(r.millisecond,3);case\"s\":return this.num(r.second);case\"ss\":return this.num(r.second,2);case\"m\":return this.num(r.minute);case\"mm\":return this.num(r.minute,2);case\"h\":return this.num(r.hour%12==0?12:r.hour%12);case\"hh\":return this.num(r.hour%12==0?12:r.hour%12,2);case\"H\":return this.num(r.hour);case\"HH\":return this.num(r.hour,2);case\"Z\":return i({format:\"narrow\",allowZ:this.opts.allowZ});case\"ZZ\":return i({format:\"short\",allowZ:this.opts.allowZ});case\"ZZZ\":return i({format:\"techie\",allowZ:this.opts.allowZ});case\"ZZZZ\":return r.zone.offsetName(r.ts,{format:\"short\",locale:this.loc.locale});case\"ZZZZZ\":return r.zone.offsetName(r.ts,{format:\"long\",locale:this.loc.locale});case\"z\":return r.zoneName;case\"a\":return a();case\"d\":return t?s({day:\"numeric\"},\"day\"):this.num(r.day);case\"dd\":return t?s({day:\"2-digit\"},\"day\"):this.num(r.day,2);case\"c\":return this.num(r.weekday);case\"ccc\":return u(\"short\",!0);case\"cccc\":return u(\"long\",!0);case\"ccccc\":return u(\"narrow\",!0);case\"E\":return this.num(r.weekday);case\"EEE\":return u(\"short\",!1);case\"EEEE\":return u(\"long\",!1);case\"EEEEE\":return u(\"narrow\",!1);case\"L\":return t?s({month:\"numeric\",day:\"numeric\"},\"month\"):this.num(r.month);case\"LL\":return t?s({month:\"2-digit\",day:\"numeric\"},\"month\"):this.num(r.month,2);case\"LLL\":return o(\"short\",!0);case\"LLLL\":return o(\"long\",!0);case\"LLLLL\":return o(\"narrow\",!0);case\"M\":return t?s({month:\"numeric\"},\"month\"):this.num(r.month);case\"MM\":return t?s({month:\"2-digit\"},\"month\"):this.num(r.month,2);case\"MMM\":return o(\"short\",!1);case\"MMMM\":return o(\"long\",!1);case\"MMMMM\":return o(\"narrow\",!1);case\"y\":return t?s({year:\"numeric\"},\"year\"):this.num(r.year);case\"yy\":return t?s({year:\"2-digit\"},\"year\"):this.num(r.year.toString().slice(-2),2);case\"yyyy\":return t?s({year:\"numeric\"},\"year\"):this.num(r.year,4);case\"yyyyyy\":return t?s({year:\"numeric\"},\"year\"):this.num(r.year,6);case\"G\":return c(\"short\");case\"GG\":return c(\"long\");case\"GGGGG\":return c(\"narrow\");case\"kk\":return this.num(r.weekYear.toString().slice(-2),2);case\"kkkk\":return this.num(r.weekYear,4);case\"W\":return this.num(r.weekNumber);case\"WW\":return this.num(r.weekNumber,2);case\"o\":return this.num(r.ordinal);case\"ooo\":return this.num(r.ordinal,3);case\"q\":return this.num(r.quarter);case\"qq\":return this.num(r.quarter,2);case\"X\":return this.num(Math.floor(r.ts/1e3));case\"x\":return this.num(r.ts);default:return l(e)}})}formatDurationFromString(e,t){const r=e=>{switch(e[0]){case\"S\":return\"millisecond\";case\"s\":return\"second\";case\"m\":return\"minute\";case\"h\":return\"hour\";case\"d\":return\"day\";case\"M\":return\"month\";case\"y\":return\"year\";default:return null}},n=pe.parseFormat(t),s=n.reduce((e,{literal:t,val:r})=>t?e:e.concat(r),[]),i=e.shiftTo(...s.map(r).filter(e=>e));return ge(n,(a=i,e=>{var t=r(e);return t?this.num(a.get(t),e.length):e}));var a}}class ve{constructor(e,t){this.reason=e,this.explanation=t}toMessage(){return this.explanation?`${this.reason}: ${this.explanation}`:this.reason}}class Te{get type(){throw new o}get name(){throw new o}get isUniversal(){throw new o}offsetName(e,t){throw new o}formatOffset(e,t){throw new o}offset(e){throw new o}equals(e){throw new o}get isValid(){throw new o}}let Se=null;class Oe extends Te{static get instance(){return null===Se&&(Se=new Oe),Se}get type(){return\"system\"}get name(){return(new Intl.DateTimeFormat).resolvedOptions().timeZone}get isUniversal(){return!1}offsetName(e,{format:t,locale:r}){return B(e,t,r)}formatOffset(e,t){return ee(this.offset(e),t)}offset(e){return-new Date(e).getTimezoneOffset()}equals(e){return\"system\"===e.type}get isValid(){return!0}}const be=RegExp(`^${re.source}$`);let Me={};const ke={year:0,month:1,day:2,hour:3,minute:4,second:5};let Ne={};class De extends Te{static create(e){return Ne[e]||(Ne[e]=new De(e)),Ne[e]}static resetCache(){Ne={},Me={}}static isValidSpecifier(e){return!(!e||!e.match(be))}static isValidZone(e){try{return new Intl.DateTimeFormat(\"en-US\",{timeZone:e}).format(),!0}catch(e){return!1}}static parseGMTOffset(e){if(e){e=e.match(/^Etc\\/GMT(0|[+-]\\d{1,2})$/i);if(e)return-60*parseInt(e[1])}return null}constructor(e){super(),this.zoneName=e,this.valid=De.isValidZone(e)}get type(){return\"iana\"}get name(){return this.zoneName}get isUniversal(){return!1}offsetName(e,{format:t,locale:r}){return B(e,t,r,this.name)}formatOffset(e,t){return ee(this.offset(e),t)}offset(e){var t=new Date(e);if(isNaN(t))return NaN;var r=(o=this.name,Me[o]||(Me[o]=new Intl.DateTimeFormat(\"en-US\",{hourCycle:\"h23\",timeZone:o,year:\"numeric\",month:\"2-digit\",day:\"2-digit\",hour:\"2-digit\",minute:\"2-digit\",second:\"2-digit\"})),Me[o]),[n,s,i,a,e,o]=(r.formatToParts?function(e,t){const r=e.formatToParts(t),n=[];for(let e=0;e<r.length;e++){var{type:s,value:i}=r[e],s=ke[s];$(s)||(n[s]=parseInt(i,10))}return n}:function(e,t){var r=e.format(t).replace(/\\u200E/g,\"\"),[,n,s,i,e,t,r]=/(\\d+)\\/(\\d+)\\/(\\d+),? (\\d+):(\\d+):(\\d+)/.exec(r);return[i,n,s,e,t,r]})(r,t),r=+t,t=r%1e3;return(J({year:n,month:s,day:i,hour:a,minute:e,second:o,millisecond:0})-(r-=0<=t?t:1e3+t))/6e4}equals(e){return\"iana\"===e.type&&e.name===this.name}get isValid(){return this.valid}}let Ee=null;class Ve extends Te{static get utcInstance(){return null===Ee&&(Ee=new Ve(0)),Ee}static instance(e){return 0===e?Ve.utcInstance:new Ve(e)}static parseSpecifier(e){if(e){e=e.match(/^utc(?:([+-]\\d{1,2})(?::(\\d{2}))?)?$/i);if(e)return new Ve(Q(e[1],e[2]))}return null}constructor(e){super(),this.fixed=e}get type(){return\"fixed\"}get name(){return 0===this.fixed?\"UTC\":`UTC${ee(this.fixed,\"narrow\")}`}offsetName(){return this.name}formatOffset(e,t){return ee(this.fixed,t)}get isUniversal(){return!0}offset(){return this.fixed}equals(e){return\"fixed\"===e.type&&e.fixed===this.fixed}get isValid(){return!0}}class Ie extends Te{constructor(e){super(),this.zoneName=e}get type(){return\"invalid\"}get name(){return this.zoneName}get isUniversal(){return!1}offsetName(){return null}formatOffset(){return\"\"}offset(){return NaN}equals(){return!1}get isValid(){return!1}}function xe(e,t){if($(e)||null===e)return t;if(e instanceof Te)return e;if(\"string\"!=typeof e)return Z(e)?Ve.instance(e):\"object\"==typeof e&&e.offset&&\"number\"==typeof e.offset?e:new Ie(e);var r=e.toLowerCase();return\"local\"===r||\"system\"===r?t:\"utc\"===r||\"gmt\"===r?Ve.utcInstance:null!=(t=De.parseGMTOffset(e))?Ve.instance(t):De.isValidSpecifier(r)?De.create(e):Ve.parseSpecifier(r)||new Ie(e)}let Ce=()=>Date.now(),$e=\"system\",Ze=null,Fe=null,Le=null,ze;class qe{static get now(){return Ce}static set now(e){Ce=e}static set defaultZone(e){$e=e}static get defaultZone(){return xe($e,Oe.instance)}static get defaultLocale(){return Ze}static set defaultLocale(e){Ze=e}static get defaultNumberingSystem(){return Fe}static set defaultNumberingSystem(e){Fe=e}static get defaultOutputCalendar(){return Le}static set defaultOutputCalendar(e){Le=e}static get throwOnInvalid(){return ze}static set throwOnInvalid(e){ze=e}static resetCaches(){Ye.resetCache(),De.resetCache()}}let Ae={};function je(e,t={}){var r=JSON.stringify([e,t]);let n=Ae[r];return n||(n=new Intl.DateTimeFormat(e,t),Ae[r]=n),n}let _e={};let Ue={};let He=null;function We(e,t,r,n,s){r=e.listingMode(r);return\"error\"===r?null:(\"en\"===r?n:s)(t)}class Re{constructor(e,t,r){if(this.padTo=r.padTo||0,this.floor=r.floor||!1,!t){const n={useGrouping:!1};0<r.padTo&&(n.minimumIntegerDigits=r.padTo),this.inf=function(e,t={}){var r=JSON.stringify([e,t]);let n=_e[r];return n||(n=new Intl.NumberFormat(e,t),_e[r]=n),n}(e,n)}}format(e){if(this.inf){var t=this.floor?Math.floor(e):e;return this.inf.format(t)}return j(this.floor?Math.floor(e):H(e,3),this.padTo)}}class Pe{constructor(e,t,r){this.opts=r;let n;var s,i;e.zone.isUniversal?(s=0<=(i=e.offset/60*-1)?`Etc/GMT+${i}`:`Etc/GMT${i}`,i=De.isValidZone(s),0!==e.offset&&i?(n=s,this.dt=e):(n=\"UTC\",r.timeZoneName?this.dt=e:this.dt=0===e.offset?e:Wr.fromMillis(e.ts+60*e.offset*1e3))):\"system\"===e.zone.type?this.dt=e:(this.dt=e,n=e.zone.name);const a={...this.opts};n&&(a.timeZone=n),this.dtf=je(t,a)}format(){return this.dtf.format(this.dt.toJSDate())}formatToParts(){return this.dtf.formatToParts(this.dt.toJSDate())}resolvedOptions(){return this.dtf.resolvedOptions()}}class Je{constructor(e,t,r){this.opts={style:\"long\",...r},!t&&L()&&(this.rtf=function(e,t={}){const{base:r,...n}=t;var s=JSON.stringify([e,n]);let i=Ue[s];return i||(i=new Intl.RelativeTimeFormat(e,t),Ue[s]=i),i}(e,r))}format(e,t){return this.rtf?this.rtf.format(e,t):function(e,t,r=\"always\",n){var s={years:[\"year\",\"yr.\"],quarters:[\"quarter\",\"qtr.\"],months:[\"month\",\"mo.\"],weeks:[\"week\",\"wk.\"],days:[\"day\",\"day\",\"days\"],hours:[\"hour\",\"hr.\"],minutes:[\"minute\",\"min.\"],seconds:[\"second\",\"sec.\"]},i=-1===[\"hours\",\"minutes\",\"seconds\"].indexOf(e);if(\"auto\"===r&&i){var a=\"days\"===e;switch(t){case 1:return a?\"tomorrow\":`next ${s[e][0]}`;case-1:return a?\"yesterday\":`last ${s[e][0]}`;case 0:return a?\"today\":`this ${s[e][0]}`}}var o=Object.is(t,-0)||t<0,i=1===(r=Math.abs(t)),t=s[e],i=n?!i&&t[2]||t[1]:i?s[e][0]:e;return o?`${r} ${i} ago`:`in ${r} ${i}`}(t,e,this.opts.numeric,\"long\"!==this.opts.style)}formatToParts(e,t){return this.rtf?this.rtf.formatToParts(e,t):[]}}class Ye{static fromOpts(e){return Ye.create(e.locale,e.numberingSystem,e.outputCalendar,e.defaultToEN)}static create(e,t,r,n=!1){e=e||qe.defaultLocale,n=e||(n?\"en-US\":He||(He=(new Intl.DateTimeFormat).resolvedOptions().locale,He)),t=t||qe.defaultNumberingSystem,r=r||qe.defaultOutputCalendar;return new Ye(n,t,r,e)}static resetCache(){He=null,Ae={},_e={},Ue={}}static fromObject({locale:e,numberingSystem:t,outputCalendar:r}={}){return Ye.create(e,t,r)}constructor(e,t,r,n){var[s,i,e]=function(e){if(-1===(n=e.indexOf(\"-u-\")))return[e];{let t;var r=e.substring(0,n);try{t=je(e).resolvedOptions()}catch(e){t=je(r).resolvedOptions()}var{numberingSystem:n,calendar:e}=t;return[r,n,e]}}(e);this.locale=s,this.numberingSystem=t||i||null,this.outputCalendar=r||e||null,this.intl=(i=this.locale,r=this.numberingSystem,((e=this.outputCalendar)||r)&&(i+=\"-u\",e&&(i+=`-ca-${e}`),r&&(i+=`-nu-${r}`)),i),this.weekdaysCache={format:{},standalone:{}},this.monthsCache={format:{},standalone:{}},this.meridiemCache=null,this.eraCache={},this.specifiedLocale=n,this.fastNumbersCached=null}get fastNumbers(){var e;return null==this.fastNumbersCached&&(this.fastNumbersCached=(!(e=this).numberingSystem||\"latn\"===e.numberingSystem)&&(\"latn\"===e.numberingSystem||!e.locale||e.locale.startsWith(\"en\")||\"latn\"===new Intl.DateTimeFormat(e.intl).resolvedOptions().numberingSystem)),this.fastNumbersCached}listingMode(e=0){var t=this.isEnglish(),r=!(null!==this.numberingSystem&&\"latn\"!==this.numberingSystem||null!==this.outputCalendar&&\"gregory\"!==this.outputCalendar);return t&&r?\"en\":\"intl\"}clone(e){return e&&0!==Object.getOwnPropertyNames(e).length?Ye.create(e.locale||this.specifiedLocale,e.numberingSystem||this.numberingSystem,e.outputCalendar||this.outputCalendar,e.defaultToEN||!1):this}redefaultToEN(e={}){return this.clone({...e,defaultToEN:!0})}redefaultToSystem(e={}){return this.clone({...e,defaultToEN:!1})}months(r,n=!1,e=!0){return We(this,r,e,ae,()=>{const t=n?{month:r,day:\"numeric\"}:{month:r},e=n?\"format\":\"standalone\";return this.monthsCache[e][r]||(this.monthsCache[e][r]=function(t){const r=[];for(let e=1;e<=12;e++){var n=Wr.utc(2016,e,1);r.push(t(n))}return r}(e=>this.extract(e,t,\"month\"))),this.monthsCache[e][r]})}weekdays(r,n=!1,e=!0){return We(this,r,e,ce,()=>{const t=n?{weekday:r,year:\"numeric\",month:\"long\",day:\"numeric\"}:{weekday:r},e=n?\"format\":\"standalone\";return this.weekdaysCache[e][r]||(this.weekdaysCache[e][r]=function(t){const r=[];for(let e=1;e<=7;e++){var n=Wr.utc(2016,11,13+e);r.push(t(n))}return r}(e=>this.extract(e,t,\"weekday\"))),this.weekdaysCache[e][r]})}meridiems(e=!0){return We(this,void 0,e,()=>he,()=>{if(!this.meridiemCache){const t={hour:\"numeric\",hourCycle:\"h12\"};this.meridiemCache=[Wr.utc(2016,11,13,9),Wr.utc(2016,11,13,19)].map(e=>this.extract(e,t,\"dayperiod\"))}return this.meridiemCache})}eras(e,t=!0){return We(this,e,t,ye,()=>{const t={era:e};return this.eraCache[e]||(this.eraCache[e]=[Wr.utc(-40,1,1),Wr.utc(2017,1,1)].map(e=>this.extract(e,t,\"era\"))),this.eraCache[e]})}extract(e,t,r){const n=this.dtFormatter(e,t),s=n.formatToParts(),i=s.find(e=>e.type.toLowerCase()===r);return i?i.value:null}numberFormatter(e={}){return new Re(this.intl,e.forceSimple||this.fastNumbers,e)}dtFormatter(e,t={}){return new Pe(e,this.intl,t)}relFormatter(e={}){return new Je(this.intl,this.isEnglish(),e)}isEnglish(){return\"en\"===this.locale||\"en-us\"===this.locale.toLowerCase()||new Intl.DateTimeFormat(this.intl).resolvedOptions().locale.startsWith(\"en-us\")}equals(e){return this.locale===e.locale&&this.numberingSystem===e.numberingSystem&&this.outputCalendar===e.outputCalendar}}function Ge(...e){e=e.reduce((e,t)=>e+t.source,\"\");return RegExp(`^${e}$`)}function Be(...e){return i=>e.reduce(([e,t,r],n)=>{var[s,n,r]=n(i,r);return[{...e,...s},t||n,r]},[{},null,1]).slice(0,2)}function Qe(e,...t){if(null==e)return[null,null];for(var[r,n]of t){r=r.exec(e);if(r)return n(r)}return[null,null]}function Ke(...s){return(e,t)=>{const r={};let n;for(n=0;n<s.length;n++)r[s[n]]=_(e[t+n]);return[r,null,t+n]}}var Xe=/(?:(Z)|([+-]\\d\\d)(?::?(\\d\\d))?)/,et=/(\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:[.,](\\d{1,30}))?)?)?/,tt=RegExp(`${et.source}${Xe.source}?`),u=RegExp(`(?:T${tt.source})?`),t=Ke(\"weekYear\",\"weekNumber\",\"weekDay\"),l=Ke(\"year\",\"ordinal\"),Xe=RegExp(`${et.source} ?(?:${Xe.source}|(${re.source}))?`),re=RegExp(`(?: ${Xe.source})?`);function rt(e,t,r){t=e[t];return $(t)?r:_(t)}function nt(e,t){return[{year:rt(e,t),month:rt(e,t+1,1),day:rt(e,t+2,1)},null,t+3]}function st(e,t){return[{hours:rt(e,t,0),minutes:rt(e,t+1,0),seconds:rt(e,t+2,0),milliseconds:U(e[t+3])},null,t+4]}function it(e,t){var r=!e[t]&&!e[t+1],e=Q(e[t+1],e[t+2]);return[{},r?null:Ve.instance(e),t+3]}function at(e,t){return[{},e[t]?De.create(e[t]):null,t+1]}const ot=RegExp(`^T?${et.source}$`),ut=/^-?P(?:(?:(-?\\d{1,9})Y)?(?:(-?\\d{1,9})M)?(?:(-?\\d{1,9})W)?(?:(-?\\d{1,9})D)?(?:T(?:(-?\\d{1,9})H)?(?:(-?\\d{1,9})M)?(?:(-?\\d{1,20})(?:[.,](-?\\d{1,9}))?S)?)?)$/;function lt(e){var[t,r,n,s,i,a,o,u,l]=e;const c=\"-\"===t[0];e=u&&\"-\"===u[0],t=(e,t=!1)=>void 0!==e&&(t||e&&c)?-e:e;return[{years:t(_(r)),months:t(_(n)),weeks:t(_(s)),days:t(_(i)),hours:t(_(a)),minutes:t(_(o)),seconds:t(_(u),\"-0\"===u),milliseconds:t(U(l),e)}]}const ct={GMT:0,EDT:-240,EST:-300,CDT:-300,CST:-360,MDT:-360,MST:-420,PDT:-420,PST:-480};function ht(e,t,r,n,s,i,a){const o={year:2===t.length?G(_(t)):_(t),month:se.indexOf(r)+1,day:_(n),hour:_(s),minute:_(i)};return a&&(o.second=_(a)),e&&(o.weekday=3<e.length?oe.indexOf(e)+1:ue.indexOf(e)+1),o}const dt=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|(?:([+-]\\d\\d)(\\d\\d)))$/;function mt(e){var[,t,r,n,s,i,a,o,u,l,c,e]=e,o=ht(t,s,n,r,i,a,o);let h;return h=u?ct[u]:l?0:Q(c,e),[o,new Ve(h)]}const ft=/^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\\d\\d) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\\d{4}) (\\d\\d):(\\d\\d):(\\d\\d) GMT$/,yt=/^(Monday|Tuesday|Wedsday|Thursday|Friday|Saturday|Sunday), (\\d\\d)-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\\d\\d) (\\d\\d):(\\d\\d):(\\d\\d) GMT$/,gt=/^(Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( \\d|\\d\\d) (\\d\\d):(\\d\\d):(\\d\\d) (\\d{4})$/;function wt(e){var[,t,r,n,s,i,a,e]=e;return[ht(t,s,n,r,i,a,e),Ve.utcInstance]}function pt(e){var[,t,r,n,s,i,a,e]=e;return[ht(t,e,r,n,s,i,a),Ve.utcInstance]}const vt=Ge(/([+-]\\d{6}|\\d{4})(?:-?(\\d\\d)(?:-?(\\d\\d))?)?/,u),Tt=Ge(/(\\d{4})-?W(\\d\\d)(?:-?(\\d))?/,u),St=Ge(/(\\d{4})-?(\\d{3})/,u),Ot=Ge(tt),bt=Be(nt,st,it),Mt=Be(t,st,it),kt=Be(l,st,it),Nt=Be(st,it);const Dt=Be(st);const Et=Ge(/(\\d{4})-(\\d\\d)-(\\d\\d)/,re),Vt=Ge(Xe),It=Be(nt,st,it,at),xt=Be(st,it,at);const Ct={weeks:{days:7,hours:168,minutes:10080,seconds:604800,milliseconds:6048e5},days:{hours:24,minutes:1440,seconds:86400,milliseconds:864e5},hours:{minutes:60,seconds:3600,milliseconds:36e5},minutes:{seconds:60,milliseconds:6e4},seconds:{milliseconds:1e3}},$t={years:{quarters:4,months:12,weeks:52,days:365,hours:8760,minutes:525600,seconds:31536e3,milliseconds:31536e6},quarters:{months:3,weeks:13,days:91,hours:2184,minutes:131040,seconds:7862400,milliseconds:78624e5},months:{weeks:4,days:30,hours:720,minutes:43200,seconds:2592e3,milliseconds:2592e6},...Ct},Zt=365.2425,Ft=30.436875,Lt={years:{quarters:4,months:12,weeks:Zt/7,days:Zt,hours:24*Zt,minutes:525949.2,seconds:525949.2*60,milliseconds:525949.2*60*1e3},quarters:{months:3,weeks:Zt/28,days:Zt/4,hours:24*Zt/4,minutes:131487.3,seconds:525949.2*60/4,milliseconds:7889237999.999999},months:{weeks:Ft/7,days:Ft,hours:24*Ft,minutes:43829.1,seconds:2629746,milliseconds:2629746e3},...Ct},zt=[\"years\",\"quarters\",\"months\",\"weeks\",\"days\",\"hours\",\"minutes\",\"seconds\",\"milliseconds\"],qt=zt.slice(0).reverse();function At(e,t,r=!1){e={values:r?t.values:{...e.values,...t.values||{}},loc:e.loc.clone(t.loc),conversionAccuracy:t.conversionAccuracy||e.conversionAccuracy};return new _t(e)}function jt(e,t,r,n,s){var i=e[s][r],a=t[r]/i,a=!(Math.sign(a)===Math.sign(n[s]))&&0!==n[s]&&Math.abs(a)<=1?(e=a)<0?Math.floor(e):Math.ceil(e):Math.trunc(a);n[s]+=a,t[r]-=a*i}class _t{constructor(e){var t=\"longterm\"===e.conversionAccuracy||!1;this.values=e.values,this.loc=e.loc||Ye.create(),this.conversionAccuracy=t?\"longterm\":\"casual\",this.invalid=e.invalid||null,this.matrix=t?Lt:$t,this.isLuxonDuration=!0}static fromMillis(e,t){return _t.fromObject({milliseconds:e},t)}static fromObject(e,t={}){if(null==e||\"object\"!=typeof e)throw new a(`Duration.fromObject: argument expected to be an object, got ${null===e?\"null\":typeof e}`);return new _t({values:X(e,_t.normalizeUnit),loc:Ye.fromObject(t),conversionAccuracy:t.conversionAccuracy})}static fromISO(e,t){var[r]=Qe(e,[ut,lt]);return r?_t.fromObject(r,t):_t.invalid(\"unparsable\",`the input \"${e}\" can't be parsed as ISO 8601`)}static fromISOTime(e,t){var[r]=Qe(e,[ot,Dt]);return r?_t.fromObject(r,t):_t.invalid(\"unparsable\",`the input \"${e}\" can't be parsed as ISO 8601`)}static invalid(e,t=null){if(!e)throw new a(\"need to specify a reason the Duration is invalid\");t=e instanceof ve?e:new ve(e,t);if(qe.throwOnInvalid)throw new s(t);return new _t({invalid:t})}static normalizeUnit(e){var t={year:\"years\",years:\"years\",quarter:\"quarters\",quarters:\"quarters\",month:\"months\",months:\"months\",week:\"weeks\",weeks:\"weeks\",day:\"days\",days:\"days\",hour:\"hours\",hours:\"hours\",minute:\"minutes\",minutes:\"minutes\",second:\"seconds\",seconds:\"seconds\",millisecond:\"milliseconds\",milliseconds:\"milliseconds\"}[e&&e.toLowerCase()];if(!t)throw new i(e);return t}static isDuration(e){return e&&e.isLuxonDuration||!1}get locale(){return this.isValid?this.loc.locale:null}get numberingSystem(){return this.isValid?this.loc.numberingSystem:null}toFormat(e,t={}){t={...t,floor:!1!==t.round&&!1!==t.floor};return this.isValid?pe.create(this.loc,t).formatDurationFromString(this,e):\"Invalid Duration\"}toObject(){return this.isValid?{...this.values}:{}}toISO(){if(!this.isValid)return null;let e=\"P\";return 0!==this.years&&(e+=this.years+\"Y\"),0===this.months&&0===this.quarters||(e+=this.months+3*this.quarters+\"M\"),0!==this.weeks&&(e+=this.weeks+\"W\"),0!==this.days&&(e+=this.days+\"D\"),0===this.hours&&0===this.minutes&&0===this.seconds&&0===this.milliseconds||(e+=\"T\"),0!==this.hours&&(e+=this.hours+\"H\"),0!==this.minutes&&(e+=this.minutes+\"M\"),0===this.seconds&&0===this.milliseconds||(e+=H(this.seconds+this.milliseconds/1e3,3)+\"S\"),\"P\"===e&&(e+=\"T0S\"),e}toISOTime(e={}){if(!this.isValid)return null;var t=this.toMillis();if(t<0||864e5<=t)return null;e={suppressMilliseconds:!1,suppressSeconds:!1,includePrefix:!1,format:\"extended\",...e};const r=this.shiftTo(\"hours\",\"minutes\",\"seconds\",\"milliseconds\");let n=\"basic\"===e.format?\"hhmm\":\"hh:mm\";e.suppressSeconds&&0===r.seconds&&0===r.milliseconds||(n+=\"basic\"===e.format?\"ss\":\":ss\",e.suppressMilliseconds&&0===r.milliseconds||(n+=\".SSS\"));let s=r.toFormat(n);return e.includePrefix&&(s=\"T\"+s),s}toJSON(){return this.toISO()}toString(){return this.toISO()}toMillis(){return this.as(\"milliseconds\")}valueOf(){return this.toMillis()}plus(e){if(!this.isValid)return this;const t=Ut(e),r={};for(const n of zt)(q(t.values,n)||q(this.values,n))&&(r[n]=t.get(n)+this.get(n));return At(this,{values:r},!0)}minus(e){if(!this.isValid)return this;const t=Ut(e);return this.plus(t.negate())}mapUnits(e){if(!this.isValid)return this;const t={};for(const r of Object.keys(this.values))t[r]=K(e(this.values[r],r));return At(this,{values:t},!0)}get(e){return this[_t.normalizeUnit(e)]}set(e){return this.isValid?At(this,{values:{...this.values,...X(e,_t.normalizeUnit)}}):this}reconfigure({locale:e,numberingSystem:t,conversionAccuracy:r}={}){const n=this.loc.clone({locale:e,numberingSystem:t}),s={loc:n};return r&&(s.conversionAccuracy=r),At(this,s)}as(e){return this.isValid?this.shiftTo(e).get(e):NaN}normalize(){if(!this.isValid)return this;var r,n,e=this.toObject();return r=this.matrix,n=e,qt.reduce((e,t)=>$(n[t])?e:(e&&jt(r,n,e,n,t),t),null),At(this,{values:e},!0)}shiftTo(...e){if(!this.isValid)return this;if(0===e.length)return this;e=e.map(e=>_t.normalizeUnit(e));const t={},r={},n=this.toObject();let s;for(const a of zt)if(0<=e.indexOf(a)){s=a;let e=0;for(const o in r)e+=this.matrix[o][a]*r[o],r[o]=0;Z(n[a])&&(e+=n[a]);var i=Math.trunc(e);t[a]=i,r[a]=e-i;for(const u in n)zt.indexOf(u)>zt.indexOf(a)&&jt(this.matrix,n,u,t,a)}else Z(n[a])&&(r[a]=n[a]);for(const l in r)0!==r[l]&&(t[s]+=l===s?r[l]:r[l]/this.matrix[s][l]);return At(this,{values:t},!0).normalize()}negate(){if(!this.isValid)return this;const e={};for(const t of Object.keys(this.values))e[t]=-this.values[t];return At(this,{values:e},!0)}get years(){return this.isValid?this.values.years||0:NaN}get quarters(){return this.isValid?this.values.quarters||0:NaN}get months(){return this.isValid?this.values.months||0:NaN}get weeks(){return this.isValid?this.values.weeks||0:NaN}get days(){return this.isValid?this.values.days||0:NaN}get hours(){return this.isValid?this.values.hours||0:NaN}get minutes(){return this.isValid?this.values.minutes||0:NaN}get seconds(){return this.isValid?this.values.seconds||0:NaN}get milliseconds(){return this.isValid?this.values.milliseconds||0:NaN}get isValid(){return null===this.invalid}get invalidReason(){return this.invalid?this.invalid.reason:null}get invalidExplanation(){return this.invalid?this.invalid.explanation:null}equals(e){if(!this.isValid||!e.isValid)return!1;if(!this.loc.equals(e.loc))return!1;for(const n of zt)if(t=this.values[n],r=e.values[n],!(void 0===t||0===t?void 0===r||0===r:t===r))return!1;var t,r;return!0}}function Ut(e){if(Z(e))return _t.fromMillis(e);if(_t.isDuration(e))return e;if(\"object\"==typeof e)return _t.fromObject(e);throw new a(`Unknown duration argument ${e} of type ${typeof e}`)}const Ht=\"Invalid Interval\";class Wt{constructor(e){this.s=e.start,this.e=e.end,this.invalid=e.invalid||null,this.isLuxonInterval=!0}static invalid(e,t=null){if(!e)throw new a(\"need to specify a reason the Interval is invalid\");t=e instanceof ve?e:new ve(e,t);if(qe.throwOnInvalid)throw new n(t);return new Wt({invalid:t})}static fromDateTimes(e,t){var r=Rr(e),n=Rr(t),e=(e=n,(t=r)&&t.isValid?e&&e.isValid?e<t?Wt.invalid(\"end before start\",`The end of an interval must be after its start, but you had start=${t.toISO()} and end=${e.toISO()}`):null:Wt.invalid(\"missing or invalid end\"):Wt.invalid(\"missing or invalid start\"));return null==e?new Wt({start:r,end:n}):e}static after(e,t){const r=Ut(t),n=Rr(e);return Wt.fromDateTimes(n,n.plus(r))}static before(e,t){const r=Ut(t),n=Rr(e);return Wt.fromDateTimes(n.minus(r),n)}static fromISO(e,s){var[i,a]=(e||\"\").split(\"/\",2);if(i&&a){let e,t;try{e=Wr.fromISO(i,s),t=e.isValid}catch(a){t=!1}let r,n;try{r=Wr.fromISO(a,s),n=r.isValid}catch(a){n=!1}if(t&&n)return Wt.fromDateTimes(e,r);if(t){var o=_t.fromISO(a,s);if(o.isValid)return Wt.after(e,o)}else if(n){s=_t.fromISO(i,s);if(s.isValid)return Wt.before(r,s)}}return Wt.invalid(\"unparsable\",`the input \"${e}\" can't be parsed as ISO 8601`)}static isInterval(e){return e&&e.isLuxonInterval||!1}get start(){return this.isValid?this.s:null}get end(){return this.isValid?this.e:null}get isValid(){return null===this.invalidReason}get invalidReason(){return this.invalid?this.invalid.reason:null}get invalidExplanation(){return this.invalid?this.invalid.explanation:null}length(e=\"milliseconds\"){return this.isValid?this.toDuration(e).get(e):NaN}count(e=\"milliseconds\"){if(!this.isValid)return NaN;const t=this.start.startOf(e),r=this.end.startOf(e);return Math.floor(r.diff(t,e).get(e))+1}hasSame(e){return!!this.isValid&&(this.isEmpty()||this.e.minus(1).hasSame(this.s,e))}isEmpty(){return this.s.valueOf()===this.e.valueOf()}isAfter(e){return!!this.isValid&&this.s>e}isBefore(e){return!!this.isValid&&this.e<=e}contains(e){return!!this.isValid&&(this.s<=e&&this.e>e)}set({start:e,end:t}={}){return this.isValid?Wt.fromDateTimes(e||this.s,t||this.e):this}splitAt(...e){if(!this.isValid)return[];const t=e.map(Rr).filter(e=>this.contains(e)).sort(),r=[];let{s:n}=this,s=0;for(;n<this.e;){var i=t[s]||this.e,i=+i>+this.e?this.e:i;r.push(Wt.fromDateTimes(n,i)),n=i,s+=1}return r}splitBy(e){const t=Ut(e);if(!this.isValid||!t.isValid||0===t.as(\"milliseconds\"))return[];let{s:r}=this,n=1,s;const i=[];for(;r<this.e;){var a=this.start.plus(t.mapUnits(e=>e*n));s=+a>+this.e?this.e:a,i.push(Wt.fromDateTimes(r,s)),r=s,n+=1}return i}divideEqually(e){return this.isValid?this.splitBy(this.length()/e).slice(0,e):[]}overlaps(e){return this.e>e.s&&this.s<e.e}abutsStart(e){return!!this.isValid&&+this.e==+e.s}abutsEnd(e){return!!this.isValid&&+e.e==+this.s}engulfs(e){return!!this.isValid&&(this.s<=e.s&&this.e>=e.e)}equals(e){return!(!this.isValid||!e.isValid)&&(this.s.equals(e.s)&&this.e.equals(e.e))}intersection(e){if(!this.isValid)return this;var t=(this.s>e.s?this:e).s,e=(this.e<e.e?this:e).e;return e<=t?null:Wt.fromDateTimes(t,e)}union(e){if(!this.isValid)return this;var t=(this.s<e.s?this:e).s,e=(this.e>e.e?this:e).e;return Wt.fromDateTimes(t,e)}static merge(e){const[t,r]=e.sort((e,t)=>e.s-t.s).reduce(([e,t],r)=>t?t.overlaps(r)||t.abutsStart(r)?[e,t.union(r)]:[e.concat([t]),r]:[e,r],[[],null]);return r&&t.push(r),t}static xor(e){let t=null,r=0;const n=[],s=e.map(e=>[{time:e.s,type:\"s\"},{time:e.e,type:\"e\"}]),i=Array.prototype.concat(...s),a=i.sort((e,t)=>e.time-t.time);for(const o of a)r+=\"s\"===o.type?1:-1,t=1===r?o.time:(t&&+t!=+o.time&&n.push(Wt.fromDateTimes(t,o.time)),null);return Wt.merge(n)}difference(...e){return Wt.xor([this].concat(e)).map(e=>this.intersection(e)).filter(e=>e&&!e.isEmpty())}toString(){return this.isValid?`[${this.s.toISO()} – ${this.e.toISO()})`:Ht}toISO(e){return this.isValid?`${this.s.toISO(e)}/${this.e.toISO(e)}`:Ht}toISODate(){return this.isValid?`${this.s.toISODate()}/${this.e.toISODate()}`:Ht}toISOTime(e){return this.isValid?`${this.s.toISOTime(e)}/${this.e.toISOTime(e)}`:Ht}toFormat(e,{separator:t=\" – \"}={}){return this.isValid?`${this.s.toFormat(e)}${t}${this.e.toFormat(e)}`:Ht}toDuration(e,t){return this.isValid?this.e.diff(this.s,e,t):_t.invalid(this.invalidReason)}mapEndpoints(e){return Wt.fromDateTimes(e(this.s),e(this.e))}}class Rt{static hasDST(e=qe.defaultZone){const t=Wr.now().setZone(e).set({month:12});return!e.isUniversal&&t.offset!==t.set({month:6}).offset}static isValidIANAZone(e){return De.isValidSpecifier(e)&&De.isValidZone(e)}static normalizeZone(e){return xe(e,qe.defaultZone)}static months(e=\"long\",{locale:t=null,numberingSystem:r=null,locObj:n=null,outputCalendar:s=\"gregory\"}={}){return(n||Ye.create(t,r,s)).months(e)}static monthsFormat(e=\"long\",{locale:t=null,numberingSystem:r=null,locObj:n=null,outputCalendar:s=\"gregory\"}={}){return(n||Ye.create(t,r,s)).months(e,!0)}static weekdays(e=\"long\",{locale:t=null,numberingSystem:r=null,locObj:n=null}={}){return(n||Ye.create(t,r,null)).weekdays(e)}static weekdaysFormat(e=\"long\",{locale:t=null,numberingSystem:r=null,locObj:n=null}={}){return(n||Ye.create(t,r,null)).weekdays(e,!0)}static meridiems({locale:e=null}={}){return Ye.create(e).meridiems()}static eras(e=\"short\",{locale:t=null}={}){return Ye.create(t,null,\"gregory\").eras(e)}static features(){return{relative:L()}}}function Pt(e,t){var r=e=>e.toUTC(0,{keepLocalTime:!0}).startOf(\"day\").valueOf(),e=r(t)-r(e);return Math.floor(_t.fromMillis(e).as(\"days\"))}function Jt(e,t,r,n){let[s,i,a,o]=function(t,r,e){var n,s;const i={};let a,o;for([n,s]of[[\"years\",(e,t)=>t.year-e.year],[\"quarters\",(e,t)=>t.quarter-e.quarter],[\"months\",(e,t)=>t.month-e.month+12*(t.year-e.year)],[\"weeks\",(e,t)=>{t=Pt(e,t);return(t-t%7)/7}],[\"days\",Pt]])if(0<=e.indexOf(n)){a=n;let e=s(t,r);o=t.plus({[n]:e}),o>r?(t=t.plus({[n]:e-1}),--e):t=o,i[n]=e}return[t,i,o,a]}(e,t,r);e=t-s,r=r.filter(e=>0<=[\"hours\",\"minutes\",\"seconds\",\"milliseconds\"].indexOf(e));0===r.length&&(a<t&&(a=s.plus({[o]:1})),a!==s&&(i[o]=(i[o]||0)+e/(a-s)));t=_t.fromObject(i,n);return 0<r.length?_t.fromMillis(e,n).shiftTo(...r).plus(t):t}const Yt={arab:\"[٠-٩]\",arabext:\"[۰-۹]\",bali:\"[᭐-᭙]\",beng:\"[০-৯]\",deva:\"[०-९]\",fullwide:\"[０-９]\",gujr:\"[૦-૯]\",hanidec:\"[〇|一|二|三|四|五|六|七|八|九]\",khmr:\"[០-៩]\",knda:\"[೦-೯]\",laoo:\"[໐-໙]\",limb:\"[᥆-᥏]\",mlym:\"[൦-൯]\",mong:\"[᠐-᠙]\",mymr:\"[၀-၉]\",orya:\"[୦-୯]\",tamldec:\"[௦-௯]\",telu:\"[౦-౯]\",thai:\"[๐-๙]\",tibt:\"[༠-༩]\",latn:\"\\\\d\"},Gt={arab:[1632,1641],arabext:[1776,1785],bali:[6992,7001],beng:[2534,2543],deva:[2406,2415],fullwide:[65296,65303],gujr:[2790,2799],khmr:[6112,6121],knda:[3302,3311],laoo:[3792,3801],limb:[6470,6479],mlym:[3430,3439],mong:[6160,6169],mymr:[4160,4169],orya:[2918,2927],tamldec:[3046,3055],telu:[3174,3183],thai:[3664,3673],tibt:[3872,3881]},Bt=Yt.hanidec.replace(/[\\[|\\]]/g,\"\").split(\"\");function Qt({numberingSystem:e},t=\"\"){return new RegExp(`${Yt[e||\"latn\"]}${t}`)}const Kt=\"missing Intl.DateTimeFormat.formatToParts support\";function Xt(e,t=e=>e){return{regex:e,deser:([e])=>t(function(t){let r=parseInt(t,10);if(isNaN(r)){r=\"\";for(let e=0;e<t.length;e++){var n=t.charCodeAt(e);if(-1!==t[e].search(Yt.hanidec))r+=Bt.indexOf(t[e]);else for(const a in Gt){var[s,i]=Gt[a];s<=n&&n<=i&&(r+=n-s)}}return parseInt(r,10)}return r}(e))}}const er=`( |${String.fromCharCode(160)})`,tr=new RegExp(er,\"g\");function rr(e){return e.replace(/\\./g,\"\\\\.?\").replace(tr,er)}function nr(e){return e.replace(/\\./g,\"\").replace(tr,\" \").toLowerCase()}function sr(e,r){return null===e?null:{regex:RegExp(e.map(rr).join(\"|\")),deser:([t])=>e.findIndex(e=>nr(t)===nr(e))+r}}function ir(e,t){return{regex:e,deser:([,e,t])=>Q(e,t),groups:t}}function ar(e){return{regex:e,deser:([e])=>e}}const or={year:{\"2-digit\":\"yy\",numeric:\"yyyyy\"},month:{numeric:\"M\",\"2-digit\":\"MM\",short:\"MMM\",long:\"MMMM\"},day:{numeric:\"d\",\"2-digit\":\"dd\"},weekday:{short:\"EEE\",long:\"EEEE\"},dayperiod:\"a\",dayPeriod:\"a\",hour:{numeric:\"h\",\"2-digit\":\"hh\"},minute:{numeric:\"m\",\"2-digit\":\"mm\"},second:{numeric:\"s\",\"2-digit\":\"ss\"}};let ur=null;function lr(e,t){if(e.literal)return e;const r=pe.macroTokenToFormatOpts(e.val);if(!r)return e;const n=pe.create(t,r),s=n.formatDateTimeParts((ur=ur||Wr.fromMillis(1555555555555),ur)),i=s.map(e=>function(e,t){var{type:r,value:e}=e;if(\"literal\"===r)return{literal:!0,val:e};t=t[r];let n=or[r];return\"object\"==typeof n&&(n=n[t]),n?{literal:!1,val:n}:void 0}(e,r));return i.includes(void 0)?e:i}function cr(t,e,r){const n=(l=pe.parseFormat(r),a=t,Array.prototype.concat(...l.map(e=>lr(e,a)))),s=n.map(e=>function(t,r){const n=Qt(r),s=Qt(r,\"{2}\"),i=Qt(r,\"{3}\"),a=Qt(r,\"{4}\"),o=Qt(r,\"{6}\"),u=Qt(r,\"{1,2}\"),l=Qt(r,\"{1,3}\"),c=Qt(r,\"{1,6}\"),h=Qt(r,\"{1,9}\"),d=Qt(r,\"{2,4}\"),m=Qt(r,\"{4,6}\"),f=e=>({regex:RegExp(e.val.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g,\"\\\\$&\")),deser:([e])=>e,literal:!0}),e=(e=>{if(t.literal)return f(e);switch(e.val){case\"G\":return sr(r.eras(\"short\",!1),0);case\"GG\":return sr(r.eras(\"long\",!1),0);case\"y\":return Xt(c);case\"yy\":return Xt(d,G);case\"yyyy\":return Xt(a);case\"yyyyy\":return Xt(m);case\"yyyyyy\":return Xt(o);case\"M\":return Xt(u);case\"MM\":return Xt(s);case\"MMM\":return sr(r.months(\"short\",!0,!1),1);case\"MMMM\":return sr(r.months(\"long\",!0,!1),1);case\"L\":return Xt(u);case\"LL\":return Xt(s);case\"LLL\":return sr(r.months(\"short\",!1,!1),1);case\"LLLL\":return sr(r.months(\"long\",!1,!1),1);case\"d\":return Xt(u);case\"dd\":return Xt(s);case\"o\":return Xt(l);case\"ooo\":return Xt(i);case\"HH\":return Xt(s);case\"H\":return Xt(u);case\"hh\":return Xt(s);case\"h\":return Xt(u);case\"mm\":return Xt(s);case\"m\":case\"q\":return Xt(u);case\"qq\":return Xt(s);case\"s\":return Xt(u);case\"ss\":return Xt(s);case\"S\":return Xt(l);case\"SSS\":return Xt(i);case\"u\":return ar(h);case\"a\":return sr(r.meridiems(),0);case\"kkkk\":return Xt(a);case\"kk\":return Xt(d,G);case\"W\":return Xt(u);case\"WW\":return Xt(s);case\"E\":case\"c\":return Xt(n);case\"EEE\":return sr(r.weekdays(\"short\",!1,!1),1);case\"EEEE\":return sr(r.weekdays(\"long\",!1,!1),1);case\"ccc\":return sr(r.weekdays(\"short\",!0,!1),1);case\"cccc\":return sr(r.weekdays(\"long\",!0,!1),1);case\"Z\":case\"ZZ\":return ir(new RegExp(`([+-]${u.source})(?::(${s.source}))?`),2);case\"ZZZ\":return ir(new RegExp(`([+-]${u.source})(${s.source})?`),2);case\"z\":return ar(/[a-z_+-/]{1,256}?/i);default:return f(e)}})(t)||{invalidReason:Kt};return e.token=t,e}(e,t)),i=s.find(e=>e.invalidReason);var a;if(i)return{input:e,tokens:n,invalidReason:i.invalidReason};var[o,u]=[`^${(c=s).map(e=>e.regex).reduce((e,t)=>`${e}(${t.source})`,\"\")}$`,c],r=RegExp(o,\"i\"),[l,c]=function(e,t,r){const n=e.match(t);if(n){const s={};let e=1;for(const i in r)if(q(r,i)){const a=r[i],o=a.groups?a.groups+1:1;!a.literal&&a.token&&(s[a.token.val[0]]=a.deser(n.slice(e,e+o))),e+=o}return[n,s]}return[n,{}]}(e,r,u),[o,u]=c?function(n){let e;return e=$(n.Z)?$(n.z)?null:De.create(n.z):new Ve(n.Z),$(n.q)||(n.M=3*(n.q-1)+1),$(n.h)||(n.h<12&&1===n.a?n.h+=12:12===n.h&&0===n.a&&(n.h=0)),0===n.G&&n.y&&(n.y=-n.y),$(n.u)||(n.S=U(n.u)),[Object.keys(n).reduce((e,t)=>{var r=(e=>{switch(e){case\"S\":return\"millisecond\";case\"s\":return\"second\";case\"m\":return\"minute\";case\"h\":case\"H\":return\"hour\";case\"d\":return\"day\";case\"o\":return\"ordinal\";case\"L\":case\"M\":return\"month\";case\"y\":return\"year\";case\"E\":case\"c\":return\"weekday\";case\"W\":return\"weekNumber\";case\"k\":return\"weekYear\";case\"q\":return\"quarter\";default:return null}})(t);return r&&(e[r]=n[t]),e},{}),e]}(c):[null,null];if(q(c,\"a\")&&q(c,\"H\"))throw new N(\"Can't include meridiem when specifying 24-hour format\");return{input:e,tokens:n,regex:r,rawMatches:l,matches:c,result:o,zone:u}}const hr=[0,31,59,90,120,151,181,212,243,273,304,334],dr=[0,31,60,91,121,152,182,213,244,274,305,335];function mr(e,t){return new ve(\"unit out of range\",`you specified ${t} (of type ${typeof t}) as a ${e}, which is invalid`)}function fr(e,t,r){r=new Date(Date.UTC(e,t-1,r)).getUTCDay();return 0===r?7:r}function yr(e,t,r){return r+(W(e)?dr:hr)[t-1]}function gr(e,t){const r=W(e)?dr:hr,n=r.findIndex(e=>e<t),s=t-r[n];return{month:n+1,day:s}}function wr(e){var{year:t,month:r,day:n}=e,s=yr(t,r,n),n=fr(t,r,n);let i=Math.floor((s-n+10)/7),a;return i<1?(a=t-1,i=Y(a)):i>Y(t)?(a=t+1,i=1):a=t,{weekYear:a,weekNumber:i,weekday:n,...te(e)}}function pr(e){var{weekYear:t,weekNumber:r,weekday:n}=e,s=fr(t,1,4),i=R(t);let a=7*r+n-s-3,o;a<1?(o=t-1,a+=R(o)):a>i?(o=t+1,a-=R(t)):o=t;var{month:i,day:t}=gr(o,a);return{year:o,month:i,day:t,...te(e)}}function vr(e){var{year:t,month:r,day:n}=e;return{year:t,ordinal:yr(t,r,n),...te(e)}}function Tr(e){var{year:t,ordinal:r}=e,{month:n,day:r}=gr(t,r);return{year:t,month:n,day:r,...te(e)}}function Sr(e){var t=F(e.year),r=A(e.month,1,12),n=A(e.day,1,P(e.year,e.month));return t?r?!n&&mr(\"day\",e.day):mr(\"month\",e.month):mr(\"year\",e.year)}function Or(e){var{hour:t,minute:r,second:n,millisecond:s}=e,i=A(t,0,23)||24===t&&0===r&&0===n&&0===s,a=A(r,0,59),o=A(n,0,59),e=A(s,0,999);return i?a?o?!e&&mr(\"millisecond\",s):mr(\"second\",n):mr(\"minute\",r):mr(\"hour\",t)}const br=\"Invalid DateTime\";function Mr(e){return new ve(\"unsupported zone\",`the zone \"${e.name}\" is not supported`)}function kr(e){return null===e.weekData&&(e.weekData=wr(e.c)),e.weekData}function Nr(e,t){e={ts:e.ts,zone:e.zone,c:e.c,o:e.o,loc:e.loc,invalid:e.invalid};return new Wr({...e,...t,old:e})}function Dr(e,t,r){let n=e-60*t*1e3;var s=r.offset(n);if(t===s)return[n,t];n-=60*(s-t)*1e3;r=r.offset(n);return s===r?[n,s]:[e-60*Math.min(s,r)*1e3,Math.max(s,r)]}function Er(e,t){e+=60*t*1e3;const r=new Date(e);return{year:r.getUTCFullYear(),month:r.getUTCMonth()+1,day:r.getUTCDate(),hour:r.getUTCHours(),minute:r.getUTCMinutes(),second:r.getUTCSeconds(),millisecond:r.getUTCMilliseconds()}}function Vr(e,t,r){return Dr(J(e),t,r)}function Ir(e,t){var r=e.o,n=e.c.year+Math.trunc(t.years),s=e.c.month+Math.trunc(t.months)+3*Math.trunc(t.quarters),s={...e.c,year:n,month:s,day:Math.min(e.c.day,P(n,s))+Math.trunc(t.days)+7*Math.trunc(t.weeks)},t=_t.fromObject({years:t.years-Math.trunc(t.years),quarters:t.quarters-Math.trunc(t.quarters),months:t.months-Math.trunc(t.months),weeks:t.weeks-Math.trunc(t.weeks),days:t.days-Math.trunc(t.days),hours:t.hours,minutes:t.minutes,seconds:t.seconds,milliseconds:t.milliseconds}).as(\"milliseconds\");let[i,a]=Dr(J(s),r,e.zone);return 0!==t&&(i+=t,a=e.zone.offset(i)),{ts:i,o:a}}function xr(e,t,r,n,s){var{setZone:i,zone:a}=r;if(e&&0!==Object.keys(e).length){const o=t||a,u=Wr.fromObject(e,{...r,zone:o});return i?u:u.setZone(a)}return Wr.invalid(new ve(\"unparsable\",`the input \"${s}\" can't be parsed as ${n}`))}function Cr(e,t,r=!0){return e.isValid?pe.create(Ye.create(\"en-US\"),{allowZ:r,forceSimple:!0}).formatDateTimeFromString(e,t):null}function $r(e,{suppressSeconds:t=!1,suppressMilliseconds:r=!1,includeOffset:n,includePrefix:s=!1,includeZone:i=!1,spaceZone:a=!1,format:o=\"extended\"}){let u=\"basic\"===o?\"HHmm\":\"HH:mm\";t&&0===e.second&&0===e.millisecond||(u+=\"basic\"===o?\"ss\":\":ss\",r&&0===e.millisecond||(u+=\".SSS\")),(i||n)&&a&&(u+=\" \"),i?u+=\"z\":n&&(u+=\"basic\"===o?\"ZZZ\":\"ZZ\");let l=Cr(e,u);return s&&(l=\"T\"+l),l}const Zr={month:1,day:1,hour:0,minute:0,second:0,millisecond:0},Fr={weekNumber:1,weekday:1,hour:0,minute:0,second:0,millisecond:0},Lr={ordinal:1,hour:0,minute:0,second:0,millisecond:0},zr=[\"year\",\"month\",\"day\",\"hour\",\"minute\",\"second\",\"millisecond\"],qr=[\"weekYear\",\"weekNumber\",\"weekday\",\"hour\",\"minute\",\"second\",\"millisecond\"],Ar=[\"year\",\"ordinal\",\"hour\",\"minute\",\"second\",\"millisecond\"];function jr(e){var t={year:\"year\",years:\"year\",month:\"month\",months:\"month\",day:\"day\",days:\"day\",hour:\"hour\",hours:\"hour\",minute:\"minute\",minutes:\"minute\",quarter:\"quarter\",quarters:\"quarter\",second:\"second\",seconds:\"second\",millisecond:\"millisecond\",milliseconds:\"millisecond\",weekday:\"weekday\",weekdays:\"weekday\",weeknumber:\"weekNumber\",weeksnumber:\"weekNumber\",weeknumbers:\"weekNumber\",weekyear:\"weekYear\",weekyears:\"weekYear\",ordinal:\"ordinal\"}[e.toLowerCase()];if(!t)throw new i(e);return t}function _r(e,t){const r=xe(t.zone,qe.defaultZone),n=Ye.fromObject(t),s=qe.now();let i,a;if($(e.year))i=s;else{for(const o of zr)$(e[o])&&(e[o]=Zr[o]);t=Sr(e)||Or(e);if(t)return Wr.invalid(t);t=r.offset(s);[i,a]=Vr(e,t,r)}return new Wr({ts:i,zone:r,loc:n,o:a})}function Ur(t,n,s){const i=!!$(s.round)||s.round,e=(e,t)=>{e=H(e,i||s.calendary?0:2,!0);const r=n.loc.clone(s).relFormatter(s);return r.format(e,t)},r=e=>s.calendary?n.hasSame(t,e)?0:n.startOf(e).diff(t.startOf(e),e).get(e):n.diff(t,e).get(e);if(s.unit)return e(r(s.unit),s.unit);for(const o of s.units){var a=r(o);if(1<=Math.abs(a))return e(a,o)}return e(n<t?-0:0,s.units[s.units.length-1])}function Hr(e){let t={},r;return r=0<e.length&&\"object\"==typeof e[e.length-1]?(t=e[e.length-1],Array.from(e).slice(0,e.length-1)):Array.from(e),[t,r]}class Wr{constructor(e){const t=e.zone||qe.defaultZone;let r=e.invalid||(Number.isNaN(e.ts)?new ve(\"invalid input\"):null)||(t.isValid?null:Mr(t));this.ts=$(e.ts)?qe.now():e.ts;let n=null,s=null;var i;r||(e.old&&e.old.ts===this.ts&&e.old.zone.equals(t)?[n,s]=[e.old.c,e.old.o]:(i=t.offset(this.ts),n=Er(this.ts,i),r=Number.isNaN(n.year)?new ve(\"invalid input\"):null,n=r?null:n,s=r?null:i)),this._zone=t,this.loc=e.loc||Ye.create(),this.invalid=r,this.weekData=null,this.c=n,this.o=s,this.isLuxonDateTime=!0}static now(){return new Wr({})}static local(){var[e,t]=Hr(arguments),[r,n,s,i,a,o,t]=t;return _r({year:r,month:n,day:s,hour:i,minute:a,second:o,millisecond:t},e)}static utc(){const[e,t]=Hr(arguments),[r,n,s,i,a,o,u]=t;return e.zone=Ve.utcInstance,_r({year:r,month:n,day:s,hour:i,minute:a,second:o,millisecond:u},e)}static fromJSDate(e,t={}){var r=\"[object Date]\"===Object.prototype.toString.call(e)?e.valueOf():NaN;if(Number.isNaN(r))return Wr.invalid(\"invalid input\");e=xe(t.zone,qe.defaultZone);return e.isValid?new Wr({ts:r,zone:e,loc:Ye.fromObject(t)}):Wr.invalid(Mr(e))}static fromMillis(e,t={}){if(Z(e))return e<-864e13||864e13<e?Wr.invalid(\"Timestamp out of range\"):new Wr({ts:e,zone:xe(t.zone,qe.defaultZone),loc:Ye.fromObject(t)});throw new a(`fromMillis requires a numerical input, but received a ${typeof e} with value ${e}`)}static fromSeconds(e,t={}){if(Z(e))return new Wr({ts:1e3*e,zone:xe(t.zone,qe.defaultZone),loc:Ye.fromObject(t)});throw new a(\"fromSeconds requires a numerical input\")}static fromObject(e,t={}){e=e||{};const r=xe(t.zone,qe.defaultZone);if(!r.isValid)return Wr.invalid(Mr(r));const n=qe.now(),s=r.offset(n),i=X(e,jr),a=!$(i.ordinal),o=!$(i.year),u=!$(i.month)||!$(i.day),l=o||u,c=i.weekYear||i.weekNumber,h=Ye.fromObject(t);if((l||a)&&c)throw new N(\"Can't mix weekYear/weekNumber units with year/month/day or ordinals\");if(u&&a)throw new N(\"Can't mix ordinal dates with month/day\");var d=c||i.weekday&&!l;let m,f,y=Er(n,s);d?(m=qr,f=Fr,y=wr(y)):a?(m=Ar,f=Lr,y=vr(y)):(m=zr,f=Zr);let g=!1;for(const k of m)$(i[k])?g?i[k]=f[k]:i[k]=y[k]:g=!0;var w,p,v,T,w=(d?(p=i,v=F(p.weekYear),t=A(p.weekNumber,1,Y(p.weekYear)),T=A(p.weekday,1,7),v?t?!T&&mr(\"weekday\",p.weekday):mr(\"week\",p.week):mr(\"weekYear\",p.weekYear)):a?(w=i,T=F(w.year),p=A(w.ordinal,1,R(w.year)),T?!p&&mr(\"ordinal\",w.ordinal):mr(\"year\",w.year)):Sr(i))||Or(i);if(w)return Wr.invalid(w);const S=d?pr(i):a?Tr(i):i,[O,b]=Vr(S,s,r),M=new Wr({ts:O,zone:r,o:b,loc:h});return i.weekday&&l&&e.weekday!==M.weekday?Wr.invalid(\"mismatched weekday\",`you can't specify both a weekday of ${i.weekday} and a date of ${M.toISO()}`):M}static fromISO(e,t={}){var[r,n]=Qe(e,[vt,bt],[Tt,Mt],[St,kt],[Ot,Nt]);return xr(r,n,t,\"ISO 8601\",e)}static fromRFC2822(e,t={}){var[r,n]=Qe(e.replace(/\\([^)]*\\)|[\\n\\t]/g,\" \").replace(/(\\s\\s+)/g,\" \").trim(),[dt,mt]);return xr(r,n,t,\"RFC 2822\",e)}static fromHTTP(e,t={}){var[r,e]=Qe(e,[ft,wt],[yt,wt],[gt,pt]);return xr(r,e,t,\"HTTP\",t)}static fromFormat(e,t,r={}){if($(e)||$(t))throw new a(\"fromFormat requires an input string and a format\");var{locale:n=null,numberingSystem:s=null}=r,[i,n,s]=function(e,t,r){var{result:e,zone:t,invalidReason:r}=cr(e,t,r);return[e,t,r]}(Ye.fromOpts({locale:n,numberingSystem:s,defaultToEN:!0}),e,t);return s?Wr.invalid(s):xr(i,n,r,`format ${t}`,e)}static fromString(e,t,r={}){return Wr.fromFormat(e,t,r)}static fromSQL(e,t={}){var[r,n]=Qe(e,[Et,It],[Vt,xt]);return xr(r,n,t,\"SQL\",e)}static invalid(e,t=null){if(!e)throw new a(\"need to specify a reason the DateTime is invalid\");t=e instanceof ve?e:new ve(e,t);if(qe.throwOnInvalid)throw new r(t);return new Wr({invalid:t})}static isDateTime(e){return e&&e.isLuxonDateTime||!1}get(e){return this[e]}get isValid(){return null===this.invalid}get invalidReason(){return this.invalid?this.invalid.reason:null}get invalidExplanation(){return this.invalid?this.invalid.explanation:null}get locale(){return this.isValid?this.loc.locale:null}get numberingSystem(){return this.isValid?this.loc.numberingSystem:null}get outputCalendar(){return this.isValid?this.loc.outputCalendar:null}get zone(){return this._zone}get zoneName(){return this.isValid?this.zone.name:null}get year(){return this.isValid?this.c.year:NaN}get quarter(){return this.isValid?Math.ceil(this.c.month/3):NaN}get month(){return this.isValid?this.c.month:NaN}get day(){return this.isValid?this.c.day:NaN}get hour(){return this.isValid?this.c.hour:NaN}get minute(){return this.isValid?this.c.minute:NaN}get second(){return this.isValid?this.c.second:NaN}get millisecond(){return this.isValid?this.c.millisecond:NaN}get weekYear(){return this.isValid?kr(this).weekYear:NaN}get weekNumber(){return this.isValid?kr(this).weekNumber:NaN}get weekday(){return this.isValid?kr(this).weekday:NaN}get ordinal(){return this.isValid?vr(this.c).ordinal:NaN}get monthShort(){return this.isValid?Rt.months(\"short\",{locObj:this.loc})[this.month-1]:null}get monthLong(){return this.isValid?Rt.months(\"long\",{locObj:this.loc})[this.month-1]:null}get weekdayShort(){return this.isValid?Rt.weekdays(\"short\",{locObj:this.loc})[this.weekday-1]:null}get weekdayLong(){return this.isValid?Rt.weekdays(\"long\",{locObj:this.loc})[this.weekday-1]:null}get offset(){return this.isValid?+this.o:NaN}get offsetNameShort(){return this.isValid?this.zone.offsetName(this.ts,{format:\"short\",locale:this.locale}):null}get offsetNameLong(){return this.isValid?this.zone.offsetName(this.ts,{format:\"long\",locale:this.locale}):null}get isOffsetFixed(){return this.isValid?this.zone.isUniversal:null}get isInDST(){return!this.isOffsetFixed&&(this.offset>this.set({month:1}).offset||this.offset>this.set({month:5}).offset)}get isInLeapYear(){return W(this.year)}get daysInMonth(){return P(this.year,this.month)}get daysInYear(){return this.isValid?R(this.year):NaN}get weeksInWeekYear(){return this.isValid?Y(this.weekYear):NaN}resolvedLocaleOptions(e={}){var{locale:t,numberingSystem:r,calendar:e}=pe.create(this.loc.clone(e),e).resolvedOptions(this);return{locale:t,numberingSystem:r,outputCalendar:e}}toUTC(e=0,t={}){return this.setZone(Ve.instance(e),t)}toLocal(){return this.setZone(qe.defaultZone)}setZone(t,{keepLocalTime:r=!1,keepCalendarTime:n=!1}={}){if((t=xe(t,qe.defaultZone)).equals(this.zone))return this;if(t.isValid){let e=this.ts;return(r||n)&&(r=t.offset(this.ts),n=this.toObject(),[e]=Vr(n,r,t)),Nr(this,{ts:e,zone:t})}return Wr.invalid(Mr(t))}reconfigure({locale:e,numberingSystem:t,outputCalendar:r}={}){r=this.loc.clone({locale:e,numberingSystem:t,outputCalendar:r});return Nr(this,{loc:r})}setLocale(e){return this.reconfigure({locale:e})}set(e){if(!this.isValid)return this;var t=X(e,jr),r=!$(t.weekYear)||!$(t.weekNumber)||!$(t.weekday),n=!$(t.ordinal),s=!$(t.year),i=!$(t.month)||!$(t.day),e=t.weekYear||t.weekNumber;if((s||i||n)&&e)throw new N(\"Can't mix weekYear/weekNumber units with year/month/day or ordinals\");if(i&&n)throw new N(\"Can't mix ordinal dates with month/day\");let a;r?a=pr({...wr(this.c),...t}):$(t.ordinal)?(a={...this.toObject(),...t},$(t.day)&&(a.day=Math.min(P(a.year,a.month),a.day))):a=Tr({...vr(this.c),...t});var[r,t]=Vr(a,this.o,this.zone);return Nr(this,{ts:r,o:t})}plus(e){return this.isValid?Nr(this,Ir(this,Ut(e))):this}minus(e){return this.isValid?Nr(this,Ir(this,Ut(e).negate())):this}startOf(e){if(!this.isValid)return this;const t={},r=_t.normalizeUnit(e);switch(r){case\"years\":t.month=1;case\"quarters\":case\"months\":t.day=1;case\"weeks\":case\"days\":t.hour=0;case\"hours\":t.minute=0;case\"minutes\":t.second=0;case\"seconds\":t.millisecond=0}return\"weeks\"===r&&(t.weekday=1),\"quarters\"===r&&(e=Math.ceil(this.month/3),t.month=3*(e-1)+1),this.set(t)}endOf(e){return this.isValid?this.plus({[e]:1}).startOf(e).minus(1):this}toFormat(e,t={}){return this.isValid?pe.create(this.loc.redefaultToEN(t)).formatDateTimeFromString(this,e):br}toLocaleString(e=c,t={}){return this.isValid?pe.create(this.loc.clone(t),e).formatDateTime(this):br}toLocaleParts(e={}){return this.isValid?pe.create(this.loc.clone(e),e).formatDateTimeParts(this):[]}toISO(e={}){return this.isValid?`${this.toISODate(e)}T${this.toISOTime(e)}`:null}toISODate({format:e=\"extended\"}={}){let t=\"basic\"===e?\"yyyyMMdd\":\"yyyy-MM-dd\";return 9999<this.year&&(t=\"+\"+t),Cr(this,t)}toISOWeekDate(){return Cr(this,\"kkkk-'W'WW-c\")}toISOTime({suppressMilliseconds:e=!1,suppressSeconds:t=!1,includeOffset:r=!0,includePrefix:n=!1,format:s=\"extended\"}={}){return $r(this,{suppressSeconds:t,suppressMilliseconds:e,includeOffset:r,includePrefix:n,format:s})}toRFC2822(){return Cr(this,\"EEE, dd LLL yyyy HH:mm:ss ZZZ\",!1)}toHTTP(){return Cr(this.toUTC(),\"EEE, dd LLL yyyy HH:mm:ss 'GMT'\")}toSQLDate(){return Cr(this,\"yyyy-MM-dd\")}toSQLTime({includeOffset:e=!0,includeZone:t=!1}={}){return $r(this,{includeOffset:e,includeZone:t,spaceZone:!0})}toSQL(e={}){return this.isValid?`${this.toSQLDate()} ${this.toSQLTime(e)}`:null}toString(){return this.isValid?this.toISO():br}valueOf(){return this.toMillis()}toMillis(){return this.isValid?this.ts:NaN}toSeconds(){return this.isValid?this.ts/1e3:NaN}toJSON(){return this.toISO()}toBSON(){return this.toJSDate()}toObject(e={}){if(!this.isValid)return{};const t={...this.c};return e.includeConfig&&(t.outputCalendar=this.outputCalendar,t.numberingSystem=this.loc.numberingSystem,t.locale=this.loc.locale),t}toJSDate(){return new Date(this.isValid?this.ts:NaN)}diff(e,t=\"milliseconds\",r={}){if(!this.isValid||!e.isValid)return _t.invalid(\"created by diffing an invalid DateTime\");r={locale:this.locale,numberingSystem:this.numberingSystem,...r};const n=(t=t,(Array.isArray(t)?t:[t]).map(_t.normalizeUnit)),s=e.valueOf()>this.valueOf(),i=s?this:e,a=s?e:this,o=Jt(i,a,n,r);return s?o.negate():o}diffNow(e=\"milliseconds\",t={}){return this.diff(Wr.now(),e,t)}until(e){return this.isValid?Wt.fromDateTimes(this,e):this}hasSame(e,t){if(!this.isValid)return!1;var r=e.valueOf();const n=this.setZone(e.zone,{keepLocalTime:!0});return n.startOf(t)<=r&&r<=n.endOf(t)}equals(e){return this.isValid&&e.isValid&&this.valueOf()===e.valueOf()&&this.zone.equals(e.zone)&&this.loc.equals(e.loc)}toRelative(e={}){if(!this.isValid)return null;var t=e.base||Wr.fromObject({},{zone:this.zone}),r=e.padding?this<t?-e.padding:e.padding:0;let n=[\"years\",\"months\",\"days\",\"hours\",\"minutes\",\"seconds\"],s=e.unit;return Array.isArray(e.unit)&&(n=e.unit,s=void 0),Ur(t,this.plus(r),{...e,numeric:\"always\",units:n,unit:s})}toRelativeCalendar(e={}){return this.isValid?Ur(e.base||Wr.fromObject({},{zone:this.zone}),this,{...e,numeric:\"auto\",units:[\"years\",\"months\",\"days\"],calendary:!0}):null}static min(...e){if(!e.every(Wr.isDateTime))throw new a(\"min requires all arguments be DateTimes\");return z(e,e=>e.valueOf(),Math.min)}static max(...e){if(!e.every(Wr.isDateTime))throw new a(\"max requires all arguments be DateTimes\");return z(e,e=>e.valueOf(),Math.max)}static fromFormatExplain(e,t,r={}){var{locale:n=null,numberingSystem:r=null}=r;return cr(Ye.fromOpts({locale:n,numberingSystem:r,defaultToEN:!0}),e,t)}static fromStringExplain(e,t,r={}){return Wr.fromFormatExplain(e,t,r)}static get DATE_SHORT(){return c}static get DATE_MED(){return h}static get DATE_MED_WITH_WEEKDAY(){return d}static get DATE_FULL(){return m}static get DATE_HUGE(){return f}static get TIME_SIMPLE(){return y}static get TIME_WITH_SECONDS(){return g}static get TIME_WITH_SHORT_OFFSET(){return w}static get TIME_WITH_LONG_OFFSET(){return p}static get TIME_24_SIMPLE(){return v}static get TIME_24_WITH_SECONDS(){return T}static get TIME_24_WITH_SHORT_OFFSET(){return S}static get TIME_24_WITH_LONG_OFFSET(){return O}static get DATETIME_SHORT(){return b}static get DATETIME_SHORT_WITH_SECONDS(){return M}static get DATETIME_MED(){return k}static get DATETIME_MED_WITH_SECONDS(){return D}static get DATETIME_MED_WITH_WEEKDAY(){return E}static get DATETIME_FULL(){return V}static get DATETIME_FULL_WITH_SECONDS(){return I}static get DATETIME_HUGE(){return x}static get DATETIME_HUGE_WITH_SECONDS(){return C}}function Rr(e){if(Wr.isDateTime(e))return e;if(e&&e.valueOf&&Z(e.valueOf()))return Wr.fromJSDate(e);if(e&&\"object\"==typeof e)return Wr.fromObject(e);throw new a(`Unknown datetime argument: ${e}, of type ${typeof e}`)}Xe=\"2.0.2\";\n\n//# sourceURL=webpack://webpack/./src/js/libs/luxon.js?");

/***/ }),

/***/ "./src/js/main.js":
/*!************************!*\
  !*** ./src/js/main.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _nav_getPages_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./nav/getPages.js */ \"./src/js/nav/getPages.js\");\n/* harmony import */ var _css_style_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../css/style.css */ \"./src/css/style.css\");\n/* harmony import */ var _music_sound_mp3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../music/sound.mp3 */ \"./src/music/sound.mp3\");\n/* harmony import */ var _music_zvuk_mp3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../music/zvuk.mp3 */ \"./src/music/zvuk.mp3\");\n\r\n\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://webpack/./src/js/main.js?");

/***/ }),

/***/ "./src/js/nav/getPages.js":
/*!********************************!*\
  !*** ./src/js/nav/getPages.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _pages_dateCalc_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../pages/dateCalc.js */ \"./src/js/pages/dateCalc.js\");\n/* harmony import */ var _pages_timer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../pages/timer.js */ \"./src/js/pages/timer.js\");\n\r\n\r\n\r\nconst calcPage = document.querySelector('.calc');\r\nconst timerPage = document.querySelector('.timer');\r\n\r\ndocument.querySelectorAll('.nav').forEach((el) => el.addEventListener('click', function(event){\r\n    event.preventDefault();\r\n    if  (event.target.dataset.name === 'calc') { \r\n        timerPage.classList.add('visible');\r\n        calcPage.classList.remove('visible');\r\n        } else {\r\n        calcPage.classList.add('visible');\r\n        timerPage.classList.remove('visible');\r\n        }\r\n    })\r\n);\r\n\n\n//# sourceURL=webpack://webpack/./src/js/nav/getPages.js?");

/***/ }),

/***/ "./src/js/pages/dateCalc.js":
/*!**********************************!*\
  !*** ./src/js/pages/dateCalc.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_print_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/print.js */ \"./src/js/utils/print.js\");\n/* harmony import */ var _utils_getDateDiff_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/getDateDiff.js */ \"./src/js/utils/getDateDiff.js\");\n\r\n\r\n\r\nconst form = document.getElementById(\"calcDate\");\r\nconst output = document.getElementById('output');\r\n\r\nform.onsubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const formData = new FormData(form);\r\n\r\n    const dateFrom = formData.get(\"dateFrom\");\r\n    const dateTo = formData.get(\"dateTo\");\r\n\r\n    if (!dateFrom || !dateTo) {\r\n        (0,_utils_print_js__WEBPACK_IMPORTED_MODULE_0__.printError)('Ошибка, заполните оба поля!', output)\r\n        return\r\n    }\r\n\r\n    const dateDiff = (0,_utils_getDateDiff_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(dateFrom, dateTo)\r\n\r\n    ;(0,_utils_print_js__WEBPACK_IMPORTED_MODULE_0__.printDateDiff)(dateDiff, output)\r\n};\n\n//# sourceURL=webpack://webpack/./src/js/pages/dateCalc.js?");

/***/ }),

/***/ "./src/js/pages/startTimer.js":
/*!************************************!*\
  !*** ./src/js/pages/startTimer.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"startTimer\": () => (/* binding */ startTimer)\n/* harmony export */ });\n/* harmony import */ var _pages_timer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../pages/timer.js */ \"./src/js/pages/timer.js\");\n/* harmony import */ var _utils_getAudio_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/getAudio.js */ \"./src/js/utils/getAudio.js\");\n\r\n\r\n\r\n\r\n\r\nconst timerSecondsLink = document.querySelector('.timer-seconds');\r\n\r\nfunction startTimer(time) {\r\n    let setInt = setInterval(() => {\r\n        if(time < 0) {\r\n            clearInterval(setInt); \r\n            \r\n        } else {\r\n            if (time < 6) {\r\n                timerSecondsLink.textContent = '0' + time;\r\n                _utils_getAudio_js__WEBPACK_IMPORTED_MODULE_1__.zvuk.play();  \r\n                \r\n                time--; \r\n            } else if (time < 10) {\r\n                timerSecondsLink.textContent = '0' + time;\r\n                _utils_getAudio_js__WEBPACK_IMPORTED_MODULE_1__.sound.play();\r\n                time--; \r\n            } else {\r\n                timerSecondsLink.textContent = time;\r\n                _utils_getAudio_js__WEBPACK_IMPORTED_MODULE_1__.sound.play();\r\n                time--; \r\n            }\r\n        }\r\n    }, 1000);\r\n    (0,_pages_timer_js__WEBPACK_IMPORTED_MODULE_0__.getStop)(setInt);\r\n}\r\n\r\n\n\n//# sourceURL=webpack://webpack/./src/js/pages/startTimer.js?");

/***/ }),

/***/ "./src/js/pages/timer.js":
/*!*******************************!*\
  !*** ./src/js/pages/timer.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getStop\": () => (/* binding */ getStop)\n/* harmony export */ });\n/* harmony import */ var _utils_print_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/print.js */ \"./src/js/utils/print.js\");\n/* harmony import */ var _pages_startTimer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../pages/startTimer.js */ \"./src/js/pages/startTimer.js\");\n\r\n\r\n\r\nconst inputTimer = document.querySelector('#setTimer');\r\nconst buttonStart = document.querySelector('.btn-start');\r\nconst buttonStop = document.querySelector('.btn-stop');\r\nconst output = document.querySelector('.out-timer');\r\n\r\nbuttonStart.addEventListener('click', () => {\r\n    if(inputTimer.value == '') {\r\n        (0,_utils_print_js__WEBPACK_IMPORTED_MODULE_0__.printError)('Ошибка, заполните поля таймера!', output)\r\n    } else if (inputTimer.value == '0'){\r\n        (0,_utils_print_js__WEBPACK_IMPORTED_MODULE_0__.printError)('Ошибка, введите таймер больше нуля!', output)\r\n    }\r\n    else {\r\n        inputTimer.setAttribute('disabled', 'disabled');\r\n        let time = Number(inputTimer.value);\r\n        (0,_utils_print_js__WEBPACK_IMPORTED_MODULE_0__.printError)('',output);\r\n        (0,_pages_startTimer_js__WEBPACK_IMPORTED_MODULE_1__.startTimer)(time);\r\n        let setTime = setTimeout(() => {\r\n            inputTimer.removeAttribute('disabled');\r\n        }, time * 1000 + 1000);\r\n    }\r\n});\r\n\r\nfunction getStop(setInt, setTime) { \r\n    buttonStop.addEventListener('click', () => {\r\n    clearInterval(setInt);\r\n    clearTimeout(setTime);\r\n    }\r\n)};\r\n\r\n\n\n//# sourceURL=webpack://webpack/./src/js/pages/timer.js?");

/***/ }),

/***/ "./src/js/utils/getAudio.js":
/*!**********************************!*\
  !*** ./src/js/utils/getAudio.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sound\": () => (/* binding */ sound),\n/* harmony export */   \"zvuk\": () => (/* binding */ zvuk)\n/* harmony export */ });\n/* harmony import */ var _libs_howler_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../libs/howler.js */ \"./src/js/libs/howler.js\");\n/* harmony import */ var _libs_howler_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_libs_howler_js__WEBPACK_IMPORTED_MODULE_0__);\n\r\n\r\nvar zvuk = new Howl({\r\n    src: ['./src/music/zvuk.mp3']\r\n});\r\n\r\nvar sound = new Howl({\r\n    src: ['./src/music/sound.mp3']\r\n});\r\n\r\n\n\n//# sourceURL=webpack://webpack/./src/js/utils/getAudio.js?");

/***/ }),

/***/ "./src/js/utils/getDateDiff.js":
/*!*************************************!*\
  !*** ./src/js/utils/getDateDiff.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _libs_luxon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../libs/luxon.js */ \"./src/js/libs/luxon.js\");\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((dateFrom, dateTo) => {\n    if (dateFrom < dateTo) {\n        [dateFrom, dateTo] = [dateTo, dateFrom];\n    }\n\n    const dateFromObj = _libs_luxon_js__WEBPACK_IMPORTED_MODULE_0__.DateTime.fromISO(dateFrom);\n    const dateToObj = _libs_luxon_js__WEBPACK_IMPORTED_MODULE_0__.DateTime.fromISO(dateTo);\n\n    const diff = dateFromObj.diff(dateToObj, ['years', 'months', 'days']).toObject()\n\n    return diff\n});\n\n//# sourceURL=webpack://webpack/./src/js/utils/getDateDiff.js?");

/***/ }),

/***/ "./src/js/utils/print.js":
/*!*******************************!*\
  !*** ./src/js/utils/print.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"printDateDiff\": () => (/* binding */ printDateDiff),\n/* harmony export */   \"printError\": () => (/* binding */ printError)\n/* harmony export */ });\nfunction printError(errorText, output) {\r\n    output.innerHTML = `\r\n        <span style=\"color: red;\">\r\n            ${errorText}\r\n        </span>\r\n    `\r\n}\r\n\r\nfunction printDateDiff({years, months, days}, output) {\r\n    output.innerHTML = `\r\n        Годы: ${years}\r\n        Месяцы: ${months}\r\n        Дни: ${days}\r\n    `\r\n}\r\n\r\n\n\n//# sourceURL=webpack://webpack/./src/js/utils/print.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript)
/******/ 				scriptUrl = document.currentScript.src
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) scriptUrl = scripts[scripts.length - 1].src
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl;
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/main.js");
/******/ 	
/******/ })()
;